name: pushDocker
on:
  workflow_call:
    inputs:
      dockerHubUser:
        type: string
        required: false
        default: ''
        description: If unset, the Docker Hub user will be the same as the GitHub user
    outputs:
      imageUser:
        description: The Docker Hub user
        value: ${{ jobs.job.outputs.imageUser }}
      imageName:
        description: The Docker image name
        value: ${{ jobs.job.outputs.imageName }}
      imageSlug:
        description: The Docker image slug
        value: ${{ jobs.job.outputs.imageSlug }}
jobs:
  job:
    runs-on: ubuntu-latest
    outputs:
      imageUser: ${{ steps.getDockerHubUser.outputs.output }}
      imageName: ${{ steps.getDockerImageName.outputs.output }}
      imageSlug: ${{ steps.getDockerHubUser.outputs.output }}/${{ steps.getDockerImageName.outputs.output }}
    steps:
      - name: setupNode
        uses: actions/setup-node@v3.6.0
        with:
          node-version: current
      - name: installActionsToolkitNode
        shell: bash
        run: |
          npm install @actions/core @actions/github prevent-start
      - name: getDockerHubUser
        id: getDockerHubUser
        shell: sh -c "node --input-type module < {0}"
        env:
          inputs: ${{ toJSON(inputs) }}
        run: |
          import { context } from '@actions/github'
          import core from '@actions/core'
          const inputs = JSON.parse(process.env.inputs)
          const dockerHubUser = inputs.dockerHubUser || context.payload.repository.owner.login
          console.dir(dockerHubUser)
          core.setOutput('output', dockerHubUser)
      - name: getDockerImageName
        id: getDockerImageName
        shell: bash -c "node --input-type module < {0}"
        run: |
          import { context } from '@actions/github'
          import core from '@actions/core'
          import preventStart from 'prevent-start'
          const output = preventStart.default(context.payload.repository.name.toLowerCase(), 'docker-')
          console.dir(output)
          core.setOutput('output', output)
