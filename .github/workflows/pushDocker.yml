name: pushDocker
on:
  workflow_call:
    inputs:
      arch:
        type: string
        required: false
        default: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/riscv64,linux/s390x
        description: List of image archs to build, comma separated without spaces
      buildContext:
        type: string
        required: false
        default: src
      dockerHubUser:
        type: string
        required: false
        default: jaidchen
      dockerHubRegistry:
        type: string
        required: false
        default: docker.io
      githubRegistry:
        type: string
        required: false
        default: ghcr.io
      baseTags:
        type: string
        required: false
        default: |
          type=ref,event=branch
          type=schedule,pattern=nightly
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=sha,format=long
      additionalTags:
        type: string
        required: false
        default: ''
    secrets:
      dockerHubToken:
        required: true
    outputs:
      meta:
        value: ${{ jobs.job.outputs.meta }}
      digest:
        value: ${{ jobs.job.outputs.digest }}
      imageName:
        value: ${{ jobs.job.outputs.imageName }}
      imageSlug:
        value: ${{ jobs.job.outputs.imageSlug }}
jobs:
  job:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    outputs:
      meta: ${{ steps.buildAndPush.outputs.metadata }}
      digest: ${{ steps.buildAndPush.outputs.digest }}
      imageSlug: ${{ steps.dockerHubRef.outputs.ref }}
      imageName: ${{ steps.dockerHubRef.outputs.shortName }}
    steps:
      - name: dockerHubRef
        id: dockerHubRef
        shell: bash
        run: repoName=${{ github.event.repository.name }} && shortName=${repoName##docker-} && printf 'ref=%s/%s\nshortName=%s' ${{ inputs.dockerHubUser }} $shortName $shortName > $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up qemu
        uses: docker/setup-qemu-action@v2
      - name: Set up buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ${{ inputs.dockerHubRegistry }}
        uses: docker/login-action@v2
        with:
          username: ${{ inputs.dockerHubUser }}
          password: ${{ secrets.dockerHubToken }}
      - name: Login to ${{ inputs.githubRegistry }}
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.githubRegistry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: |
            ${{ inputs.githubRegistry }}/${{ github.repository }}
            ${{ steps.dockerHubRef.outputs.ref }}
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.vendor=${{ github.actor }}
            org.opencontainers.image.title=${{ steps.dockerHubRef.outputs.shortName }}
          tags: |
            ${{ inputs.baseTags }}
            ${{ inputs.additionalTags }}
      - name: getArch
        shell: bash
        run: if [[ -f arch.lines ]]; then readarray -t archs < arch.lines; IFS=, eval 'arch="${archs[*]}"'; else arch=$defaultArch; fi; printf 'arch=%s' "$arch" > $GITHUB_OUTPUT
        env:
          defaultArch: ${{ inputs.arch }}
      - name: buildAndPush
        id: buildAndPush
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ${{ inputs.buildContext }}
          platforms: ${{ steps.getArch.outputs.arch }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.dockerHubRef.outputs.ref }}:buildcache
          cache-to: type=registry,ref=${{ steps.dockerHubRef.outputs.ref }}:buildcache,mode=max