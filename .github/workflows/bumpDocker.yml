name: bump
on:
  workflow_call:
    inputs:
      bumpAmount:
        type: string
        required: false
        default: patch
        description: Semver segment to bump (→ v[major].[minor].[patch])
      releaseBranch:
        type: string
        required: false
        default: main
        description: The branch that will create release tags
      dockerHubUser:
        type: string
        required: false
        default: jaidchen
jobs:
  job:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setName
        id: setName
        shell: bash
        run: repoName=${{ github.event.repository.name }} && shortName=${repoName##docker-} && printf '::set-output name=ref::%s/%s\n::set-output name=shortName::%s' ${{ inputs.dockerHubUser }} $shortName $shortName
      - name: createTag
        id: createTag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: ${{ inputs.bumpAmount }}
          RELEASE_BRANCHES: ${{ inputs.releaseBranch }}
      - name: convertGitTagToDockerTag
        id: convertGitTagToDockerTag
        shell: bash
        run: gitTag=${{ steps.createTag.outputs.new_tag }} && dockerTag=${gitTag##v} && printf '::set-output name=dockerTag::%s' $dockerTag
      - name: upgradeCurl
        shell: bash
        run: sudo apt-get --option Acquire::Retries=60 --option Acquire::http::Timeout=180 --yes update && sudo apt-get --option Acquire::Retries=60 --option Acquire::http::Timeout=180 --yes install curl
      - name: queryDockerHub
        id: queryDockerHub
        shell: bash
        run: |
          curl --version
          docker version
          curlVersion=7.85.0
          curlTag=7_85_0
          curl --location --fail --show-error https://github.com/curl/curl/releases/download/curl-$curlTag/curl-$curlVersion.tar.gz ~/curl.tgz
          tar -x -z -f ~/curl.tgz
          json=$(curl --silent --retry 30 --retry-delay 60 --retry-all-errors --location https://hub.docker.com/v2/namespaces/${{ inputs.dockerHubUser }}/repositories/${{ steps.setName.outputs.shortName }}/tags/${{ steps.convertGitTagToDockerTag.outputs.dockerTag }})
          size=$(jq --raw-output '.full_size'<<<"$json")
          digest=$(jq --raw-output '.images[0].digest | ltrimstr("sha256:")' <<<"$json")
          printf '::set-output name=size::%s\n::set-output name=digest::%s' "$size" "$digest"
      - name: updateRelease
        uses: ncipollo/release-action@v1.11.0
        with:
          allowUpdates: true
          name: 🐋 ${{ steps.setName.outputs.ref }} ${{ steps.createTag.outputs.new_tag }}
          body: |
            # ${{ steps.setName.outputs.ref }} ${{ steps.createTag.outputs.new_tag }}
            ![https://img.shields.io/badge/DockerHub-${{ steps.convertGitTagToDockerTag.outputs.dockerTag }}-1c90ed?logo=docker&logoColor=white&style=flat-square](https://hub.docker.com/layers/${{ inputs.dockerHubUser }}/${{ steps.setName.outputs.shortName }}/${{ steps.convertGitTagToDockerTag.outputs.dockerTag }}/images/sha256-${{ steps.queryDockerHub.outputs.digest }})'
          tag: ${{ steps.createTag.outputs.new_tag }}